// Program adapted from linux arm to apple arm64
// based on "lesson06-arm-linux-example.s".

.global _start

_start:
	// Shift left
	mov x0, #40   // 00000000000000000000000000101000 = 40
	lsl x0, x0, 1 // 00000000000000000000000001010000 = 80
	lsl x0, x0, 1 // 00000000000000000000000010100000 = 160

	// Shift right
	mov x0, #40   // 00000000000000000000000000101000 = 40
	lsr x0, x0, 1 // 00000000000000000000000000010100 = 20
	lsr x0, x0, 1 // 00000000000000000000000000001010 = 10

	// Arithmetic shift right
	mov x0, #-40  // 11111111111111111111111111011000 = 4294967256
	asr x0, x0, 1 // 11111111111111111111111111101100 = 4294967276
	asr x0, x0, 1 // 11111111111111111111111111110110 = 4294967286

	// Rotate right
	mov x0, #-40  // 11111111111111111111111111011000 = 4294967256
	ror x0, x0, 1 // 01111111111111111111111111101100 = 2147483628
	ror x0, x0, 1 // 00111111111111111111111111110110 = 1073741814
	ror x0, x0, 1 // 00011111111111111111111111111011 = 536870907
	ror x0, x0, 1 // 10001111111111111111111111111101 = 2415919101

	// Exit program
	mov X0, 0		// 0 status code
	mov X16, 1
	svc 0
